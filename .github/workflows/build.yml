name: 'Test'

on:
  push:
    branches:
      - "*"
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

env:
  TEST_REPO_URL: https://github.com/jasonyang-ee/STM32-CMAKE-TEMPLATE.git
  TEST_REPO: jasonyang-ee/STM32-CMAKE-TEMPLATE

jobs:
  Build_Test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout project
      uses: actions/checkout@v3

    - name: Checkout example repo
      uses: actions/checkout@v3
      with:
        repository: jasonyang-ee/STM32-CMAKE-TEMPLATE
        path: project
    
    - name: Delete dangling image package
      uses: actions/delete-package-versions@v4
      with: 
        package-name: 'stm32-builder'
        package-type: 'container'
        min-versions-to-keep: 0
        delete-only-untagged-versions: 'true'

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to Github Container Registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ vars.REGISTRY }}
        username: ${{ secrets.USER_GITHUB_PERSONAL }}
        password: ${{ secrets.TOKEN_GITHUB_PERSONAL }}

    - name: Set QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Load for Ubuntu
      id: output-ubuntu-amd64
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        file: ${{ github.workspace }}/Dockerfile.ubuntu
        load: true
        tags: test

    - name: Build and Load for Ubuntu
      id: output-ubuntu-arm64
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/arm64/v8
        file: ${{ github.workspace }}/Dockerfile.ubuntu
        load: true
        tags: test

    - name: Build and Load for Debian
      id: output-debian-amd64
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        file: ${{ github.workspace }}/Dockerfile.debian
        load: true
        tags: test

    - name: Build and Load for Debian
      id: output-debian-arm64
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/arm64/v8
        file: ${{ github.workspace }}/Dockerfile.debian
        load: true
        tags: test

    - name: Build and Load for Alpine
      id: output-alpine-amd64
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        file: ${{ github.workspace }}/Dockerfile.alpine
        load: true
        tags: test

    - name: Build and Load for Alpine
      id: output-alpine-arm64
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/arm64/v8
        file: ${{ github.workspace }}/Dockerfile.alpine
        load: true
        tags: test

    - name: Build and Load for Arch
      id: output-arch
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{ github.workspace }}/Dockerfile.arch
        load: true
        tags: test

    - name: Test Default
      run: |
        docker run ${{ steps.output-ubuntu-amd64.outputs.imageid }}
        docker run ${{ steps.output-debian-amd64.outputs.imageid }}
        docker run ${{ steps.output-alpine-amd64.outputs.imageid }}
        docker run ${{ steps.output-arch.outputs.imageid }}

    - name: Test --help
      run: |
        docker run ${{ steps.output-ubuntu-amd64.outputs.imageid }} --help
        docker run ${{ steps.output-debian-amd64.outputs.imageid }} --help
        docker run ${{ steps.output-alpine-amd64.outputs.imageid }} --help
        docker run ${{ steps.output-arch.outputs.imageid }} --help

    - name: Test URL
      run: |
        docker run ${{ steps.output-ubuntu-amd64.outputs.imageid }} ${{ env.TEST_REPO_URL }}
        docker run ${{ steps.output-debian-amd64.outputs.imageid }} ${{ env.TEST_REPO_URL }}
        docker run ${{ steps.output-alpine-amd64.outputs.imageid }} ${{ env.TEST_REPO_URL }}
        docker run ${{ steps.output-arch.outputs.imageid }} ${{ env.TEST_REPO_URL }}

    - name: Test Volume
      run: |
        docker run -v "${{ github.workspace }}/project":"/proj" ${{ steps.output-ubuntu-amd64.outputs.imageid }} /proj
        sudo rm -r ${{ github.workspace }}/project/build
        docker run -v "${{ github.workspace }}/project":"/proj" ${{ steps.output-debian-amd64.outputs.imageid }} /proj
        sudo rm -r ${{ github.workspace }}/project/build
        docker run -v "${{ github.workspace }}/project":"/proj" ${{ steps.output-alpine-amd64.outputs.imageid }} /proj Debug
        sudo rm -r ${{ github.workspace }}/project/build
        docker run -v "${{ github.workspace }}/project":"/proj" ${{ steps.output-arch.outputs.imageid }} /proj Debug
      
    - name: Test Hybrid
      run: |
        docker run -v "${{ github.workspace }}/hybrid1":"/home" ${{ steps.output-ubuntu-amd64.outputs.imageid }} ${{ env.TEST_REPO_URL }}
        docker run -v "${{ github.workspace }}/hybrid1":"/home" ${{ steps.output-debian-amd64.outputs.imageid }} ${{ env.TEST_REPO_URL }}
        docker run -v "${{ github.workspace }}/hybrid2":"/home" ${{ steps.output-alpine-amd64.outputs.imageid }} ${{ env.TEST_REPO_URL }} Debug
        docker run -v "${{ github.workspace }}/hybrid3":"/home" ${{ steps.output-arch.outputs.imageid }} ${{ env.TEST_REPO_URL }} Debug