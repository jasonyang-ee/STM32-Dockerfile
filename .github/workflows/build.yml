name: 'Test'

on:
  push:
    branches:
      - "*"
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

env:
  TEST_REPO_URL: https://github.com/jasonyang-ee/STM32-CMAKE-TEMPLATE.git
  TEST_REPO: jasonyang-ee/STM32-CMAKE-TEMPLATE

jobs:
  Build_Test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        aarch: [amd64, arm64]
        files: [ubuntu, debian, alpine]

    steps:
    - name: free disk space from docker
      run: |
        docker rmi $(docker image ls -aq)
        df -h

    - name: Checkout project
      uses: actions/checkout@v3

    - name: Checkout example repo
      uses: actions/checkout@v3
      with:
        repository: jasonyang-ee/STM32-CMAKE-TEMPLATE
        path: project
    
    - name: Delete dangling image package
      uses: actions/delete-package-versions@v4
      with: 
        package-name: 'stm32-builder'
        package-type: 'container'
        min-versions-to-keep: 0
        delete-only-untagged-versions: 'true'

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to Github Container Registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ vars.REGISTRY }}
        username: ${{ secrets.USER_GITHUB_PERSONAL }}
        password: ${{ secrets.TOKEN_GITHUB_PERSONAL }}

    - name: Set QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Load
      id: output-ubuntu-amd64
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        file: ${{ github.workspace }}/Dockerfile.ubuntu
        load: true
        tags: test

    - name: Build and Load Ubuntu Debian Alpine
      id: output-${{ matrix.files }}-${{ matrix.aarch }
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/${{ matrix.aarch }
        file: ${{ github.workspace }}/Dockerfile.${{ matrix.files }}
        load: true
        tags: test

    - name: Build and Load Arch
      id: output-arch
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{ github.workspace }}/Dockerfile.arch
        load: true
        tags: test

    - name: Test All
      run: |
        docker run -rm ${{ steps.output-${{ matrix.files }}-${{ matrix.aarch }.outputs.imageid }} ${{ env.TEST_REPO_URL }}
        docker run -rm -v "${{ github.workspace }}/project-${{ matrix.files }}-${{ matrix.aarch }":"/proj" ${{ steps.output-${{ matrix.files }}-${{ matrix.aarch }.outputs.imageid }} /proj-${{ matrix.files }}-${{ matrix.aarch }
        docker run -rm -v "${{ github.workspace }}/hybrid-${{ matrix.files }}-${{ matrix.aarch }":"/home" ${{ steps.output-${{ matrix.files }}-${{ matrix.aarch }.outputs.imageid }} ${{ env.TEST_REPO_URL }}
        docker run -rm ${{ steps.output-arch.outputs.imageid }} ${{ env.TEST_REPO_URL }}
        docker run -rm -v "${{ github.workspace }}/project-arch":"/proj" ${{ steps.output-arch.outputs.imageid }} /proj Debug
        docker run -rm -v "${{ github.workspace }}/hybrid-arch":"/home" ${{ steps.output-arch.outputs.imageid }} ${{ env.TEST_REPO_URL }} Debug

    - name: Cleanup Folders
      run: |
        rm -rf ${{ github.workspace }}/project-*
        rm -rf ${{ github.workspace }}/hybrid-*
        rm -rf ${{ github.workspace }}/project
        rm -rf ${{ github.workspace }}/hybrid

    - name: Delete dangling image package
      uses: actions/delete-package-versions@v4
      with: 
        package-name: 'stm32-builder'
        package-type: 'container'
        min-versions-to-keep: 0
        delete-only-untagged-versions: 'true'
    
    - name: free disk space from docker
      run: |
        docker rmi $(docker image ls -aq)
        df -h